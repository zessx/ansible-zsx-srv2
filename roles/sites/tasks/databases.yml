---
- name: Ensure PostgreSQL databases are present.
  postgresql_db:
    name: "{{ item.value.database.name }}"
    lc_collate: "{{ item.value.database.lc_collate | default('en_US.UTF-8') }}"
    lc_ctype: "{{ item.value.database.lc_ctype | default('en_US.UTF-8') }}"
    encoding: "{{ item.value.database.encoding | default('UTF-8') }}"
    template: "{{ item.value.database.template | default('template0') }}"
    login_host: "{{ item.value.database.login_host | default('localhost') }}"
    login_password: "{{ item.value.database.login_password | default(omit) }}"
    login_user: "{{ item.value.database.login_user | default(postgresql_user) }}"
    login_unix_socket: "{{ item.value.database.login_unix_socket | default(postgresql_unix_socket_directories[0]) }}"
    port: "{{ item.value.database.port | default(omit) }}"
    owner: "{{ item.value.database.owner | default(postgresql_user) }}"
    state: "{{ item.value.database.state | default('present') }}"
  when: item.value.database is defined
  loop: "{{ sites | dict2items }}"
  become: true
  become_user: "{{ postgresql_user }}"
  vars:
    ansible_ssh_pipelining: true
  tags: [databases]

- name: Ensure PostgreSQL users are present.
  postgresql_user:
    name: "{{ item.value.database.user.name }}"
  when: item.value.database is defined
  loop: "{{ sites | dict2items }}"
  no_log: "{{ postgres_users_no_log }}"
  become: true
  become_user: "{{ postgresql_user }}"
  vars:
    ansible_ssh_pipelining: true
  tags: [databases]

- name: Ensure PostgreSQL users are configured correctly.
  postgresql_user:
    name: "{{ item.value.database.user.name }}"
    password: "{{ item.value.database.user.password | default(omit) }}"
    encrypted: "{{ item.value.database.user.encrypted | default(omit) }}"
    priv: "{{ item.value.database.user.priv | default(omit) }}"
    role_attr_flags: "{{ item.value.database.user.role_attr_flags | default(omit) }}"
    db: "{{ item.value.database.user.db | default(omit) }}"
    login_host: "{{ item.value.database.user.login_host | default('localhost') }}"
    login_password: "{{ item.value.database.user.login_password | default(omit) }}"
    login_user: "{{ item.value.database.user.login_user | default(postgresql_user) }}"
    login_unix_socket: "{{ item.value.database.user.login_unix_socket | default(postgresql_unix_socket_directories[0]) }}"
    port: "{{ item.value.database.user.port | default(omit) }}"
    state: "{{ item.value.database.user.state | default('present') }}"
  when: item.value.database is defined
  loop: "{{ sites | dict2items }}"
  no_log: "{{ postgres_users_no_log }}"
  become: true
  become_user: "{{ postgresql_user }}"
  vars:
    ansible_ssh_pipelining: true
  tags: [databases]
